{"version":3,"file":"static/js/387.9824c1fd.chunk.js","mappings":"8RAEaA,EAAOC,EAAAA,GAAAA,GAAH,mLASJC,EAAOD,EAAAA,GAAAA,GAAH,mF,SCqBjB,EA3BgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,qGACHC,EAAAA,EAAAA,IAAgBP,GADb,OAChBQ,EADgB,OAEtBJ,GAAU,OAAII,IAFQ,2CAAH,qDAKrBF,GACD,GAAE,CAACN,IAEqB,IAAlBG,EAAOM,QACZ,SAACZ,EAAD,UACGM,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACd,EAAD,YACE,uBAAIa,KACJ,uBAAIC,MAFKF,EADD,OAQd,mEAEH,C,kMC1BDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,mCAAG,+GAInBF,EAAAA,EAAAA,IAAA,uBAJmB,uBAGnBG,EAHmB,EAG3BC,KAAQD,QAHmB,kBAMtBA,GANsB,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,qDAYjBC,EAAc,mCAAG,WAAMC,GAAN,kGAIhBR,EAAAA,EAAAA,IAAA,gBAA2B,CACnCS,OAAQ,CACND,MAAOA,KANe,uBAGhBL,EAHgB,EAGxBC,KAAQD,QAHgB,kBAUnBA,GAVmB,gCAY1BE,QAAQC,IAAR,MAZ0B,yDAAH,sDAgBdI,EAAe,mCAAG,WAAMxB,GAAN,kGAEJc,EAAAA,EAAAA,IAAA,iBAAoBd,IAFhB,uBAEnBkB,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDAUfK,EAAe,mCAAG,WAAMzB,GAAN,kGAIjBc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aAJiB,uBAGjB0B,EAHiB,EAGzBR,KAAQQ,KAHiB,kBAMpBA,GANoB,gCAQ3BP,QAAQC,IAAR,MAR2B,yDAAH,sDAYfb,EAAe,mCAAG,WAAMP,GAAN,kGAIjBc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aAJiB,uBAGjBiB,EAHiB,EAGzBC,KAAQD,QAHiB,kBAMpBA,GANoB,gCAQ3BE,QAAQC,IAAR,MAR2B,yDAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 39px -10px rgba(0, 0, 0, 0.75);\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n","import { getReviewsMovie } from 'components/services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Item, List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      const resp = await getReviewsMovie(movieId);\n      setMovies([...resp]);\n    };\n\n    getMovieCredits();\n  }, [movieId]);\n\n  return movies.length !== 0 ? (\n    <List>\n      {movies.map(({ id, author, content }) => (\n        <Item key={id}>\n          <b>{author}</b>\n          <p>{content}</p>\n        </Item>\n      ))}\n    </List>\n  ) : (\n    <b>We don't have any reviews for this movie</b>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=da95833c0cadff5f8d11f7c5d3928061\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'da95833c0cadff5f8d11f7c5d3928061',\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/trending/movie/day`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovie = async query => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/search/movie`, {\n      params: {\n        query: query,\n      },\n    });\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetailsMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCreditsMovie = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n\n    return cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviewsMovie = async movieId => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["List","styled","Item","movieId","useParams","useState","movies","setMovies","useEffect","getMovieCredits","getReviewsMovie","resp","length","map","id","author","content","axios","api_key","getTrendingMovies","results","data","console","log","getSearchMovie","query","params","getDetailsMovie","getCreditsMovie","cast"],"sourceRoot":""}