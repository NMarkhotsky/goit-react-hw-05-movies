{"version":3,"file":"static/js/257.7336d8d7.chunk.js","mappings":"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","sources":["components/services/api.js","pages/Home/Home.styled.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=da95833c0cadff5f8d11f7c5d3928061\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'da95833c0cadff5f8d11f7c5d3928061',\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/trending/movie/day`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovie = async query => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/search/movie`, {\n      params: {\n        query: query,\n      },\n    });\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetailsMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCreditsMovie = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n\n    return cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviewsMovie = async movieId => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  /* display: flex; */\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  width: 120px;\n  padding: 5px 15px;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  text-decoration: none;\n  color: #ffffff;\n  background-color: #ff4500;\n  border-radius: 5px;\n\n  :hover {\n    background-color: #9d3109;\n  }\n`;\n\nexport const ThumbDetails = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 30px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 39px -10px rgba(0, 0, 0, 0.75);\n`;\n\nexport const ThumbInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ListGenres = styled.ul`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const ItemGenres = styled.li`\n  background-color: #78ae59;\n  color: #ffffff;\n  border-radius: 5px;\n  padding: 5px 15px;\n`;\n\nexport const ThumbAdditional = styled.div``;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 50px;\n`;\n\nexport const AdditionalItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 120px;\n  background-color: #ff4500;\n  border-radius: 5px;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getDetailsMovie } from 'components/services/api';\nimport {\n  BackLink,\n  ThumbDetails,\n  ItemGenres,\n  ListGenres,\n  Main,\n  ThumbInfo,\n  ThumbAdditional,\n  AdditionalList,\n  AdditionalItem,\n} from './MovieDetails.styled';\nimport { Title } from 'pages/Home/Home.styled';\nimport { MdOutlineArrowBack } from 'react-icons/md';\nimport defaultPosterImage from '../../images/noPosterImage.jpg';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [detailsMovie, setDetailsMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMoviesDetails = async () => {\n      const results = await getDetailsMovie(movieId);\n      setDetailsMovie(results);\n    };\n\n    getMoviesDetails();\n  }, [movieId]);\n\n  const {\n    original_title,\n    release_date,\n    vote_average,\n    poster_path,\n    overview,\n    genres,\n  } = detailsMovie;\n\n  const userScore = vote_average?.toFixed(1) * 10;\n  const releaseDate = new Date(release_date);\n\n  return (\n    <Main>\n      <BackLink to={backLinkLocationRef.current}>\n        <MdOutlineArrowBack />\n        Go back\n      </BackLink>\n\n      <ThumbDetails>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : defaultPosterImage\n          }\n          alt={original_title}\n          width={320}\n        />\n        <ThumbInfo>\n          <h2>\n            <b>{original_title}</b> ({releaseDate.getFullYear()})\n          </h2>\n          <b>User score: {userScore}%</b>\n          <b>Overview</b>\n          <p>{overview} </p>\n          <b>Genres</b>\n          <ListGenres>\n            {genres &&\n              genres.map(({ id, name }) => (\n                <ItemGenres key={id}>{name}</ItemGenres>\n              ))}\n          </ListGenres>\n        </ThumbInfo>\n      </ThumbDetails>\n      <ThumbAdditional>\n        <Title>Additional information</Title>\n        <AdditionalList>\n          <AdditionalItem>\n            <BackLink to=\"cast\">Cast</BackLink>\n          </AdditionalItem>\n          <AdditionalItem>\n            <BackLink to=\"reviews\">Reviews</BackLink>\n          </AdditionalItem>\n        </AdditionalList>\n      </ThumbAdditional>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","getTrendingMovies","results","data","console","log","getSearchMovie","query","params","getDetailsMovie","movieId","getCreditsMovie","cast","getReviewsMovie","Container","styled","Title","Main","BackLink","Link","ThumbDetails","ThumbInfo","ListGenres","ItemGenres","ThumbAdditional","AdditionalList","AdditionalItem","useState","detailsMovie","setDetailsMovie","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMoviesDetails","original_title","release_date","vote_average","poster_path","overview","genres","userScore","toFixed","releaseDate","Date","to","current","src","defaultPosterImage","alt","width","getFullYear","map","id","name","Suspense","fallback","Loader"],"sourceRoot":""}