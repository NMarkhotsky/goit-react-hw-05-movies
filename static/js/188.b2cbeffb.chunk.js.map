{"version":3,"file":"static/js/188.b2cbeffb.chunk.js","mappings":"qVAEaA,EAAWC,EAAAA,GAAAA,GAAH,kOAWRC,EAAWD,EAAAA,GAAAA,GAAH,uTAkBRE,EAAOF,EAAAA,GAAAA,EAAH,mE,SCYjB,EApCa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,qGACHC,EAAAA,EAAAA,GAAgBP,GADb,OAChBQ,EADgB,OAEtBJ,GAAU,OAAII,IAFQ,2CAAH,qDAKrBF,GACD,GAAE,CAACN,KAGF,SAACJ,EAAD,UACGO,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACV,UAACf,EAAD,YACE,gBACEgB,IACED,EAAY,wCACyBA,GACjCE,EAENC,IAAKL,EACLM,MAAO,MAET,SAAClB,EAAD,UAAOY,KACP,UAACZ,EAAD,YACE,sCADF,IACqBa,OAZRF,EADL,KAmBjB,C,kMCrCDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,mCAAG,+GAInBF,EAAAA,EAAAA,IAAA,uBAJmB,uBAGnBG,EAHmB,EAG3BC,KAAQD,QAHmB,kBAMtBA,GANsB,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,qDAYjBC,EAAc,mCAAG,WAAMC,GAAN,kGAIhBR,EAAAA,EAAAA,IAAA,gBAA2B,CACnCS,OAAQ,CACND,MAAOA,KANe,uBAGhBL,EAHgB,EAGxBC,KAAQD,QAHgB,kBAUnBA,GAVmB,gCAY1BE,QAAQC,IAAR,MAZ0B,yDAAH,sDAgBdI,EAAe,mCAAG,WAAM5B,GAAN,kGAEJkB,EAAAA,EAAAA,IAAA,iBAAoBlB,IAFhB,uBAEnBsB,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDAUfjB,EAAe,mCAAG,WAAMP,GAAN,kGAIjBkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,aAJiB,uBAGjB6B,EAHiB,EAGzBP,KAAQO,KAHiB,kBAMpBA,GANoB,gCAQ3BN,QAAQC,IAAR,MAR2B,yDAAH,sDAYfM,EAAe,mCAAG,WAAM9B,GAAN,kGAIjBkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,aAJiB,uBAGjBqB,EAHiB,EAGzBC,KAAQD,QAHiB,kBAMpBA,GANoB,gCAQ3BE,QAAQC,IAAR,MAR2B,yDAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n  gap: 25px;\n  padding: 30px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 39px -10px rgba(0, 0, 0, 0.75);\n`;\n\nexport const ItemCast = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  width: 10%;\n\n  cursor: pointer;\n\n  transform: scale(1);\n  transition: transform 2s cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 12px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCreditsMovie } from 'components/services/api';\n\nimport defaultImage from '../../images/noFoto.jpg';\nimport { ItemCast, ListCast, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      const resp = await getCreditsMovie(movieId);\n      setMovies([...resp]);\n    };\n\n    getMovieCredits();\n  }, [movieId]);\n\n  return (\n    <ListCast>\n      {movies.map(({ id, name, character, profile_path }) => (\n        <ItemCast key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w92${profile_path}`\n                : defaultImage\n            }\n            alt={name}\n            width={92}\n          />\n          <Text>{name}</Text>\n          <Text>\n            <b>Character:</b> {character}\n          </Text>\n        </ItemCast>\n      ))}\n    </ListCast>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=da95833c0cadff5f8d11f7c5d3928061\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'da95833c0cadff5f8d11f7c5d3928061',\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/trending/movie/day`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovie = async query => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/search/movie`, {\n      params: {\n        query: query,\n      },\n    });\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetailsMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCreditsMovie = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n\n    return cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviewsMovie = async movieId => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ListCast","styled","ItemCast","Text","movieId","useParams","useState","movies","setMovies","useEffect","getMovieCredits","getCreditsMovie","resp","map","id","name","character","profile_path","src","defaultImage","alt","width","axios","api_key","getTrendingMovies","results","data","console","log","getSearchMovie","query","params","getDetailsMovie","cast","getReviewsMovie"],"sourceRoot":""}