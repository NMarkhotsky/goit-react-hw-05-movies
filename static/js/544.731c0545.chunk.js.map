{"version":3,"file":"static/js/544.731c0545.chunk.js","mappings":"0NAGaA,EAAOC,EAAAA,GAAAA,GAAH,kIAQJC,EAAOD,EAAAA,GAAAA,GAAH,8NAYJE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2CAIVI,EAAQJ,EAAAA,GAAAA,EAAH,0J,mBCWlB,MAjCA,YAAiC,IAAXK,EAAU,EAAVA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,SAACR,EAAD,UACGM,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACV,EAAD,WACE,UAACC,EAAD,CAAYU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,WACE,gBACES,IACEJ,EAAW,0CAC4BA,GACnCK,EAENC,IAAKP,EACLQ,MAAO,OAET,SAACd,EAAD,WACE,uBAAIM,UAZCD,EADD,OAqBnB,C,kMC5BDU,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAiB,mCAAG,+GAInBF,EAAAA,EAAAA,IAAA,uBAJmB,uBAGnBG,EAHmB,EAG3BC,KAAQD,QAHmB,kBAMtBA,GANsB,gCAQ7BE,QAAQC,IAAR,MAR6B,yDAAH,qDAYjBC,EAAc,mCAAG,WAAMC,GAAN,kGAIhBR,EAAAA,EAAAA,IAAA,gBAA2B,CACnCS,OAAQ,CACND,MAAOA,KANe,uBAGhBL,EAHgB,EAGxBC,KAAQD,QAHgB,kBAUnBA,GAVmB,gCAY1BE,QAAQC,IAAR,MAZ0B,yDAAH,sDAgBdI,EAAe,mCAAG,WAAMC,GAAN,kGAEJX,EAAAA,EAAAA,IAAA,iBAAoBW,IAFhB,uBAEnBP,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDAUfM,EAAe,mCAAG,WAAMD,GAAN,kGAIjBX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aAJiB,uBAGjBE,EAHiB,EAGzBT,KAAQS,KAHiB,kBAMpBA,GANoB,gCAQ3BR,QAAQC,IAAR,MAR2B,yDAAH,sDAYfQ,EAAe,mCAAG,WAAMH,GAAN,kGAIjBX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aAJiB,uBAGjBR,EAHiB,EAGzBC,KAAQD,QAHiB,kBAMpBA,GANoB,gCAQ3BE,QAAQC,IAAR,MAR2B,yDAAH,qD,oIC7B5B,UAzBa,WACX,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAO7B,EAAP,KAAe8B,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEQhB,EAAAA,EAAAA,MAFR,OAERC,EAFQ,OAIda,GAAU,OAAIb,IAJA,gDAMdE,QAAQC,IAAR,MANc,yDAAH,qDAUfY,GACD,GAAE,KAGD,UAAC,IAAD,YACE,SAAC,IAAD,8BACA,SAAC,IAAD,CAAYhC,OAAQA,MAGzB,C,yGC1BYiC,EAAYtC,EAAAA,GAAAA,KAAH,gDAITI,EAAQJ,EAAAA,GAAAA,GAAH,sE","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/services/api.js","pages/Home/Home.jsx","pages/Home/Home.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n  gap: 40px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  width: 20%;\n  transform: scale(1);\n  transition: transform 2s cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #000000;\n`;\n\nexport const Title = styled.p`\n  margin-top: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 14px;\n  text-align: center;\n  max-width: 200px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Item, List, StyledLink, Title } from './MoviesList.styled';\nimport defaultPosterImage from '../../images/noPosterImage.jpg';\nimport PropTypes from 'prop-types';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movies.map(({ id, title, poster_path }) => (\n          <Item key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                    : defaultPosterImage\n                }\n                alt={title}\n                width={240}\n              />\n              <Title>\n                <b>{title}</b>\n              </Title>\n            </StyledLink>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=da95833c0cadff5f8d11f7c5d3928061\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'da95833c0cadff5f8d11f7c5d3928061',\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/trending/movie/day`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovie = async query => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/search/movie`, {\n      params: {\n        query: query,\n      },\n    });\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetailsMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCreditsMovie = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n\n    return cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviewsMovie = async movieId => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'components/services/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Container, Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const results = await getTrendingMovies();\n\n        setMovies([...results]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMovies();\n  }, []);\n\n  return (\n    <Container>\n      <Title>Trending today</Title>\n      <MoviesList movies={movies} />\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  /* display: flex; */\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n  text-align: center;\n`;\n"],"names":["List","styled","Item","StyledLink","Link","Title","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","defaultPosterImage","alt","width","axios","api_key","getTrendingMovies","results","data","console","log","getSearchMovie","query","params","getDetailsMovie","movieId","getCreditsMovie","cast","getReviewsMovie","useState","setMovies","useEffect","getMovies","Container"],"sourceRoot":""}